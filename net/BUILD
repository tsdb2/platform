package(default_visibility = ["//visibility:public"])

cc_library(
    name = "epoll_server",
    srcs = ["epoll_server.cc"],
    hdrs = ["epoll_server.h"],
    visibility = ["//http:__subpackages__"],
    deps = [
        "//common:ref_count",
        "//common:reffed_ptr",
        "//common:utilities",
        "//io:fd",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/functional:bind_front",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/synchronization",
    ],
)

cc_library(
    name = "base_sockets",
    srcs = ["base_sockets.cc"],
    hdrs = ["base_sockets.h"],
    deps = [
        ":epoll_server",
        "//common:default_scheduler",
        "//common:no_destructor",
        "//common:scheduler",
        "//common:utilities",
        "//io:buffer",
        "//io:fd",
        "//server:base_module",
        "//server:init_tsdb2",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/functional:any_invocable",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
    ],
)

cc_library(
    name = "sockets",
    srcs = ["sockets.cc"],
    hdrs = ["sockets.h"],
    deps = [
        ":base_sockets",
        ":epoll_server",
        "//common:default_scheduler",
        "//common:reffed_ptr",
        "//common:scheduler",
        "//common:utilities",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/functional:any_invocable",
        "@com_google_absl//absl/functional:bind_front",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
    ],
)

cc_library(
    name = "alpn",
    srcs = ["alpn.cc"],
    hdrs = ["alpn.h"],
    visibility = ["//visibility:private"],
    deps = [
        "@com_google_absl//absl/log:check",
    ],
)

cc_library(
    name = "ssl",
    srcs = ["ssl.cc"],
    hdrs = ["ssl.h"],
    visibility = ["//visibility:private"],
    deps = [
        ":alpn",
        "//common:env",
        "//common:no_destructor",
        "//common:singleton",
        "//common:utilities",
        "//io:fd",
        "//server:base_module",
        "//server:init_tsdb2",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/synchronization",
    ],
)

cc_library(
    name = "ssl_testing",
    testonly = True,
    srcs = ["ssl_testing.cc"],
    deps = [
        ":alpn",
        ":ssl",
        ":ssl_sockets",
        "//common:no_destructor",
        "//common:scoped_override",
        "//common:singleton",
        "//common:utilities",
        "//server:base_module",
        "//server:init_tsdb2",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
    ],
    alwayslink = True,
)

cc_library(
    name = "ssl_sockets",
    srcs = ["ssl_sockets.cc"],
    hdrs = ["ssl_sockets.h"],
    deps = [
        ":base_sockets",
        ":epoll_server",
        ":ssl",
        "//common:default_scheduler",
        "//common:no_destructor",
        "//common:reffed_ptr",
        "//common:scheduler",
        "//common:simple_condition",
        "//common:utilities",
        "//server:base_module",
        "//server:init_tsdb2",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/functional:any_invocable",
        "@com_google_absl//absl/functional:bind_front",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
    ],
)

cc_test(
    name = "sockets_test",
    srcs = ["sockets_test.cc"],
    deps = [
        ":base_sockets",
        ":sockets",
        ":ssl",
        ":ssl_sockets",
        ":ssl_testing",
        "//common:default_scheduler",
        "//common:flag_override",
        "//common:mock_clock",
        "//common:no_destructor",
        "//common:reffed_ptr",
        "//common:scheduler",
        "//common:scoped_override",
        "//common:sequence_number",
        "//common:simple_condition",
        "//common:singleton",
        "//common:stats_counter",
        "//common:testing",
        "//common:utilities",
        "//server:init_tsdb2",
        "//server:testing",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:status_matchers",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
        "@com_google_googletest//:gtest_main",
    ],
)
